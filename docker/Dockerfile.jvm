# --- Build stage ---
#FROM maven:3.9-eclipse-temurin-24 AS build
#ARG MODULE
#WORKDIR /workspace
#COPY . .
#RUN mvn -q -DskipTests -pl ${MODULE} -am package
#
## --- Run stage ---
#FROM eclipse-temurin:24-jre
#ARG MODULE
#ENV JAVA_OPTS="-XX:MaxRAMPercentage=75 -XX:+UseSerialGC"
#WORKDIR /app
#COPY --from=build /workspace/${MODULE}/target/*.jar app.jar
#EXPOSE 8080
#ENTRYPOINT ["sh","-c","java $JAVA_OPTS -jar app.jar"]
##### new docker file
# syntax=docker/dockerfile:1.6

############################
# Build stage
############################
FROM maven:3.9-eclipse-temurin-24 AS build
ARG MODULE
WORKDIR /workspace

# 1) Copy root + ALL module POMs (no sources yet)
COPY pom.xml .
COPY common/pom.xml common/pom.xml
COPY edge-pos-api/pom.xml edge-pos-api/pom.xml
COPY pricing-service/pom.xml pricing-service/pom.xml
COPY prescription-service/pom.xml prescription-service/pom.xml
COPY inventory-service/pom.xml inventory-service/pom.xml
COPY payments-service/pom.xml payments-service/pom.xml
COPY insurer-integration-service/pom.xml insurer-integration-service/pom.xml
COPY audit-service/pom.xml audit-service/pom.xml
COPY product-service/pom.xml product-service/pom.xml
COPY label-localization-service/pom.xml label-localization-service/pom.xml

# 2) Warm the Maven repo with all dependencies
RUN --mount=type=cache,target=/root/.m2 \
    mvn -q -U -DskipTests \
       -Dmaven.wagon.http.retryHandler.count=8 \
       dependency:go-offline

# 3) Copy the full sources now (invalidates fewer layers when code changes)
COPY . .

# 4) Build the selected module and its dependencies
RUN --mount=type=cache,target=/root/.m2 \
    mvn -q -U -DskipTests \
       -Dmaven.wagon.http.retryHandler.count=8 \
       -pl ${MODULE} -am package

############################
# Run stage
############################
FROM eclipse-temurin:24-jre
ARG MODULE
ENV JAVA_OPTS="-XX:MaxRAMPercentage=75 -XX:+UseSerialGC"
WORKDIR /app
COPY --from=build /workspace/${MODULE}/target/*.jar app.jar
EXPOSE 8080
ENTRYPOINT ["sh","-c","java $JAVA_OPTS -jar app.jar"]