server:
  port: 8080
management:
  endpoints.web.exposure.include: health,info,metrics,readiness,liveness
  endpoint.health.probes.enabled: true
springdoc:
  api-docs.path: /v3/api-docs
  swagger-ui.path: /swagger-ui.html

spring:
  application:
    name: inventory-service
  datasource:
    url: jdbc:postgresql://localhost:5432/pos_inventory_service
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  kafka:
    bootstrap-servers: localhost:19092
    properties:
      schema.registry.url: http://localhost:18085
      producer:
        acks: all
        properties:
          enable.idempotence: true
          max.in.flight.requests.per.connection: 1
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      consumer:
        group-id: inventory-cg
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
        properties:
          specific.avro.reader: true
          isolation.level: read_committed
      listener:
        ack-mode: RECORD
data:
  redis:
    host: localhost
    port: 6379

app:
  topics:
    productEvents: productEvents
    inventoryEvents: inventoryEvents

