server:
  port: 8080
management:
  endpoints.web.exposure.include: health,info,metrics,readiness,liveness
  endpoint.health.probes.enabled: true
springdoc:
  api-docs.path: /v3/api-docs
  swagger-ui.path: /swagger-ui.html

spring:
  application:
    name: inventory-service
  datasource:
    url: jdbc:postgresql://localhost:5432/pos_inventory_service
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true

  kafka:
    # Use the Redpanda broker you're querying with rpk
    bootstrap-servers: localhost:9092

    # Common props shared by consumer/producer
    properties:
      schema.registry.url: http://localhost:8081   # <- adjust if your registry runs elsewhere
      specific.avro.reader: true

    consumer:
      group-id: inventory-cg
      auto-offset-reset: earliest
      # Wrap SerDe errors so DefaultErrorHandler can handle them (skip/DLT, etc.)
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
        isolation.level: read_committed

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      # (optional hardening)
      acks: all
      linger-ms: 5

    listener:
      ack-mode: RECORD

data:
  redis:
    host: localhost
    port: 6379

app:
  topics:
    productEvents: productEvents
    inventoryEvents: inventoryEvents

logging:
  level:
    root: ERROR
    org.springframework: ERROR
    org.springframework.boot: ERROR
    org.apache.kafka.clients.producer: INFO
    org.apache.kafka.clients.consumer: INFO
    org.apache.kafka.common.network: INFO
    org.springframework.kafka.core.KafkaTemplate: INFO
    org.springframework.kafka.listener: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n"
  file:
    name: logs/application_inventory.log
  logback:
    rollingpolicy:
      max-history: 7
      max-file-size: 10MB